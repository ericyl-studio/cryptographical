plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.16.0'
}

group = 'com.ericyl.utils'
version = '0.1.0'

repositories {
    mavenCentral()
}

// 确保生成sources和javadoc JAR
java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // 从 java 组件中自动捕获项目的artifact
            from components.java

            // 可选：配置pom文件的生成，增加项目描述和开发者信息等
            pom {
                name = 'Cryptographical'
                description = 'AES + RSA'
                url = 'https://www.ericyl.com/cryptographical'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ericyl'
                        name = 'Ericyl Studio'
                        email = 'ericyl@ericyl.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/ericyl-studio/cryptographical.git'
                    developerConnection = 'scm:git:ssh://github.com/ericyl-studio/cryptographical.git'
                    url = 'https://github.com/ericyl-studio/cryptographical'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }

}


// JReleaser配置 - 直接处理Maven Central发布和签名
jreleaser {

    // GPG签名配置 - 使用环境变量
    signing {
        active = 'ALWAYS'
        armored = true
        publicKey = System.getenv('JRELEASER_GPG_PUBLIC_KEY')
        secretKey = System.getenv('JRELEASER_GPG_SECRET_KEY')
        passphrase = System.getenv('JRELEASER_GPG_PASSPHRASE')
    }

    // Maven Central发布配置
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    username = System.getenv('MAVEN_USERNAME')
                    password = System.getenv('MAVEN_PASSWORD')

                    // 必需的staging目录配置
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }

}

dependencies {
    api("org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}")

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}