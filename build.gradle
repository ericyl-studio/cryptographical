plugins {
    id 'java-library'
    id 'org.jreleaser' version '1.16.0'
}

group = 'com.ericyl.utils'
version = '0.1.0'

repositories {
    mavenCentral()
}

// 确保生成sources和javadoc JAR
java {
    withJavadocJar()
    withSourcesJar()
}

// JReleaser配置 - 直接处理Maven Central发布和签名
jreleaser {
    project {
        name = 'cryptographical'
        description = 'AES + RSA cryptographical library'
        longDescription = 'A Java library providing AES and RSA cryptographic functions with BouncyCastle integration'
        copyright = 'Ericyl Studio'
        authors = ['Ericyl Studio']
        license = 'Apache-2.0'
        
        links {
            homepage = 'https://github.com/ericyl-studio/cryptographical'
            documentation = 'https://github.com/ericyl-studio/cryptographical'
            license = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
        }
        
        java {
            groupId = 'com.ericyl.utils'
            artifactId = 'cryptographical'
            mainClass = ''
        }
    }
    
    // GPG签名配置 - 使用环境变量
    signing {
        active = 'ALWAYS'
        armored = true
        publicKey = System.getenv('JRELEASER_GPG_PUBLIC_KEY')
        secretKey = System.getenv('JRELEASER_GPG_SECRET_KEY')
        passphrase = System.getenv('JRELEASER_GPG_PASSPHRASE')
    }
    
    // Maven Central发布配置
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    username = System.getenv('MAVEN_USERNAME')
                    password = System.getenv('MAVEN_PASSWORD')

                    // 必需的staging目录配置
                    stagingRepository('build/libs')
                }
            }
        }
    }
    
    // 禁用GitHub发布
    release {
        github {
            enabled = false
        }
    }
}

dependencies {
    api("org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}")

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}